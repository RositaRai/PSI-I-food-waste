@page "{ID?}"
@using PSI_Food_waste.Pages.Forms
@model PSI_Food_waste.Pages.Forms.RestaurantProductsModel
@{
}
<h1>@Model.restaurant.Title</h1></>

<h2>Available products</h2>
<form method="post">
    <label asp-for="searchCriteria">product name: </label>
    <input type="text" asp-for="searchCriteria" />
    <button class="btn btn-primary" type="submit">Search</button>
</form>

<div>
    <ul class="pagination">
        @for (var i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                <a asp-page="/Forms/RestaurantProducts" asp-route-currentpage="@i" class="page-link">@i</a>
            </li>
        }
    </ul>
</div>
<table class="table mt-5">
    <thead>
        <tr>
            <th scope="col">Name</th>
            <th scope="col">Price</th>
            <th scope="col">Discount size</th>
            <th scope="col">Size</th>
            <th scope="col">Gluten Free</th>
            <th scope="col"></th>
        </tr>
    </thead>
    @*@foreach (var product in Model.products)
        {
            <tr>
                <td>@product.Name</td>
                <td>@($"{product.Price:C}")</td>
                <td>@product.Size</td>
                <td>@Model.GlutenFreeText(product)</td>
            </tr>
        }*@
    @{
        if (!string.IsNullOrWhiteSpace(value : Model.searchCriteria))
        {
            var query = from Models.Product product in Model.products
                        where product.Name.ToLower().Contains(value : Model.searchCriteria)
                        select product;
            int queryCount = query.Count();
            Model.Count = queryCount;
            var data = query.ToList();
            //data = await Model._productRepository.GetPaginatedResult(data, Model.CurrentPage, Model.PageSize);
            //query.any
            //var enumerator = object.iterator();
            //while (enumerator.kazkoksmetodas.next())
            //    {
            //        enumerator.get
            //    }
            if (queryCount != 0)
            {
                foreach (var rez in data)
                {
                    <tr>
                        <td>@rez.Name</td>
                        <td><strike style="color:red">@($"{rez.Price:C}")</strike>     @($"{rez.DiscountedPrice:C}") </td>
                        <td>@($"{(rez.Discount/100d):P0}")</td>
                        
                    </tr>
                }

                <p>results found: @Model.Count</p>
            }

            else
            {
                <tr>
                    <td>no results</td>
                    <td>-</td>
                    <td>-</td>
                    <td>-</td>
                </tr>
            }
        }

        else
        {
            foreach (var product in Model.Data)
            {
                <tr>
                    <td>@product.Name</td>
                    <td><strike style="color:red">@($"{product.Price:C}")</strike>     @($"{product.DiscountedPrice:C}") </td>
                    <td>@($"{(product.Discount/100d):P0}")</td>
                    <td>@product.Size</td>
                    
                </tr>
            }
        }
    }
</table>
<div style="width:100px; margin:1 auto;">
    <ul class="pagination">
        @if (Model.ShowPrevious)
        {
            <li class="page-item">
                <a asp-page="/Forms/RestaurantProducts" asp-route-currentpage="@(Model.CurrentPage -1)" class="page-link">Previous</a>
            </li>
        }
        @if (Model.ShowNext)
        {
            <li class="page-item">
                <a asp-page="/Forms/RestaurantProducts" asp-route-currentpage="@(Model.CurrentPage + 1)" class="page-link">Next</a>
            </li>
        }
    </ul>
</div>
@*@{
    if (!string.IsNullOrWhiteSpace(Model.searchCriteria))
    {
        var query = from Models.Product product in Model.products
                    where product.Name.Contains(Model.searchCriteria)
                    select product;
        foreach (var rez in query)
        {
            <p>@rez.Name</p>
        }
    }
}*@
@*<p>@Model.searchCriteria</p>*@
@*@foreach (var product in Model.products)
    {
        if (product.Name.Equals(@Model.searchCriteria))
        {
            <p>it's a match</p>
        }
    }*@
